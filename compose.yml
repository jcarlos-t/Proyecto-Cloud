services:
  ms1-usuarios:
    image: pauloimb/ms1-usuarios:latest
    container_name: ms1-usuarios
    restart: unless-stopped
    ports:
      - "8001:8000"
    networks:
      - backend
    environment:
      MYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: 3707
      MYSQL_USER: root
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: ms1_db
      FASTAPI_PORT: 8000
      CORS_ALLOWED_ORIGINS: ${GLOBAL_CORS}

  ms2-productos:
    image: vssz01/ms2_productos:latest
    container_name: ms2-productos
    restart: unless-stopped
    ports:
      - "8002:8080"
    networks:
      - backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5555
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 123
      CORS_ALLOWED_ORIGINS: ${GLOBAL_CORS}

  ms3-pedidos:
    image: jc01010101/ms3-pedidos:latest
    container_name: ms3-pedidos
    restart: unless-stopped
    ports:
      - "8003:3003"
    networks:
      - backend
    environment:
    #   NODE_ENV: production
      MONGO_URI: mongodb://admin:admin@${DB_HOST}:27017/ms3?authSource=admin
      MS1_USUARIOS_API_URL: http://ms1-usuarios:8000
      MS2_PRODUCTOS_API_URL: http://ms2-productos:8080
      PORT: 3003
      CORS_ORIGIN: ${GLOBAL_CORS}

  ms4-orquestador:
    image: jdrosales6/ms4-orquestador:latest
    container_name: ms4-orquestador
    restart: unless-stopped
    ports:
      - "8004:8004"
    environment:
      MS1_URL: "http://ms1-usuarios:8000"
      MS2_URL: "http://ms2-productos:8080"
      MS3_URL: "http://ms3-pedidos:3003"
      REQUEST_TIMEOUT: "5.0"
      TAX_RATE: "0.18"
      CORS_ALLOWED_ORIGINS: ${GLOBAL_CORS}
    networks:
      - backend
      
  ms5_ds:
    image: vssz01/ms5_ds:latest
    container_name: ms5_ds
    restart: unless-stopped
    ports:
      - "8005:8005"
    networks:
      - backend
    environment:
      CORS_ALLOWED_ORIGINS: ${GLOBAL_CORS}
    volumes:
      - ~/.aws:/root/.aws:ro  

networks:
  backend:
    driver: bridge

