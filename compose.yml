version: "3.9"

services:
  ms1-usuarios:
    image: pauloimb/ms1-usuarios:latest
    container_name: ms1-usuarios
    restart: unless-stopped
    ports:
      - "8001:8000"
    networks:
      - backend
    # environment:
    #   NODE_ENV: production
    #   PORT: 3001
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  ms2-productos:
    image: vssz01/ms2_productos:latest
    container_name: ms2-productos
    restart: unless-stopped
    ports:
      - "8002:8080"
    networks:
      - backend
    environment:
      DB_HOST: 18.215.44.221
      DB_PORT: 5555
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 123
      CORS_ALLOWED_ORIGINS: "*"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  ms3-pedidos:
    image: jc01010101/ms3-pedidos:v1
    container_name: ms3-pedidos
    restart: unless-stopped
    ports:
      - "8003:3003"
    networks:
      - backend
    depends_on:
      ms1-usuarios:
        condition: service_healthy
      ms2-productos:
        condition: service_healthy
    environment:
    #   NODE_ENV: production
    #   PORT: 3003
      MS1_USUARIOS_API_URL: http://ms1-usuarios:8000
      MS2_PRODUCTOS_API_URL: http://ms2-productos:8080
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3003/health >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge

